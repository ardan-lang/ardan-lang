//
//  TokenType.h
//  tau-programming-lang
//
//  Created by Chidume Nnamdi on 17/08/2025.
//

#ifndef TokenType_h
#define TokenType_h

enum class TokenType {
    COMMA, // ,
    SPREAD,
    DOT, // .
    SEMI_COLON, // ;
    COLON, // :
    LEFT_PARENTHESIS,
    RIGHT_PARENTHESIS,
    LEFT_BRACKET, // {
    RIGHT_BRACKET, // }
    LEFT_SQUARE_BRACKET, // [
    RIGHT_SQUARE_BRACKET, // [
    REFERENCE_EQUAL,
    VALUE_EQUAL,
    ASSIGN,
    DECREMENT,
    ASSIGN_MINUS,
    MINUS,
    EOL,
    POWER_ASSIGN, // **=
    POWER, // **
    ASSIGN_MUL,
    MUL,
    ASSIGN_DIV,
    DIV,
    INCREMENT,
    ASSIGN_ADD,
    ADD,
    MODULI_ASSIGN,
    MODULI,
    BITWISE_LEFT_SHIFT_ASSIGN,
    BITWISE_LEFT_SHIFT,
    LESS_THAN_EQUAL, // <=
    LESS_THAN, // <
    UNSIGNED_RIGHT_SHIFT_ASSIGN,
    UNSIGNED_RIGHT_SHIFT,
    BITWISE_RIGHT_SHIFT_ASSIGN,
    BITWISE_RIGHT_SHIFT,
    GREATER_THAN_EQUAL, // >=
    GREATER_THAN, // >
    LOGICAL_AND_ASSIGN,
    LOGICAL_AND,
    BITWISE_AND_ASSIGN,
    BITWISE_AND,
    LOGICAL_OR_ASSIGN,
    LOGICAL_OR,
    BITWISE_OR_ASSIGN,
    BITWISE_OR,
    STRICT_INEQUALITY,
    INEQUALITY,
    LOGICAL_NOT,
    NULLISH_COALESCING_ASSIGN,
    NULLISH_COALESCING,
    OPTIONAL_CHAINING,
    TERNARY,
    BITWISE_NOT,
    BITWISE_XOR_ASSIGN,
    BITWISE_XOR,
    STRING,
    NUMBER,
    IDENTIFIER,
    KEYWORD,
    BOOLEAN,
    CLASS,
    EXTENDS,
    ARROW, // =>
    END_OF_FILE,
};

#endif /* TokenType_h */
